@use "sass:math";
@use "sass:map";
@mixin _xs {
  @media (max-width: #{map.get($breakpoint,'xs')}) {
    @content;
  }
}
@mixin _sm {
  @media (min-width: #{map.get($breakpoint,'xs') + 1px}) and (max-width: #{map.get($breakpoint,'sm')}) {
    @content;
  }
}

@mixin _md {
  @media (min-width: #{map.get($breakpoint,'sm') + 1px}) and (max-width: #{map.get($breakpoint,'md')}) {
    @content;
  }
}

@mixin _lg {
  @media (min-width: #{map.get($breakpoint,'md') + 1px}) and (max-width: #{map.get($breakpoint,'lg')}) {
    @content;
  }
}

@mixin _xl {
  @media (min-width: #{map.get($breakpoint,'lg') + 1px}) {
    @content;
  }
}

@mixin grid-generator($extra_px: 0px) {
  padding: $space-base;
  box-sizing: border-box;
  @for $i from 1 through $grid-cols {
    $_col_percent_: math.div($i, $grid-cols) * 100%;
    $_col_percent: calc(#{$_col_percent_} + #{$extra_px});
    &-#{$i} {
      flex: 0 0 $_col_percent;
      max-width: $_col_percent;
    }
  }
  @for $i from 1 through $grid-cols {
    $_col_percent_: math.div($i, $grid-cols) * 100%;
    $_col_percent: calc(#{$_col_percent_} + #{$extra_px});
    &-sm-#{$i} {
      @include _sm {
        flex: 0 0 $_col_percent;
        max-width: $_col_percent;
      }
    }
    &-md-#{$i} {
      @include _md {
        flex: 0 0 $_col_percent;
        max-width: $_col_percent;
      }
    }
    &-lg-#{$i} {
      @include _lg {
        flex: 0 0 $_col_percent;
        max-width: $_col_percent;
      }
    }
  }
}

@mixin force-sizes(
  $value,
  $properties: min-width max-width min-height max-height
) {
  @each $property in $properties {
    #{$property}: $value;
  }
}
